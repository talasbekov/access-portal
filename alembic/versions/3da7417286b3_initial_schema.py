"""Initial schema

Revision ID: 3da7417286b3
Revises: 
Create Date: 2025-06-07 13:25:02.493772

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3da7417286b3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('citizenships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_citizenships_id'), 'citizenships', ['id'], unique=False)
    op.create_index(op.f('ix_citizenships_name'), 'citizenships', ['name'], unique=False)
    op.create_table('divisions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['divisions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_divisions_id'), 'divisions', ['id'], unique=False)
    op.create_index(op.f('ix_divisions_name'), 'divisions', ['name'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['division_id'], ['divisions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purpose', sa.String(), nullable=True),
    sa.Column('checkpoint', sa.Integer(), nullable=True),
    sa.Column('visit_type', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('visit_date', sa.String(), nullable=True),
    sa.Column('req_author', sa.String(), nullable=True),
    sa.Column('req_date', sa.String(), nullable=True),
    sa.Column('req_sysdata', sa.String(), nullable=True),
    sa.Column('convoy', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('visitors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('iin_number', sa.Integer(), nullable=True),
    sa.Column('pass_number', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('second_name', sa.String(), nullable=True),
    sa.Column('third_name', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('dob', sa.String(), nullable=True),
    sa.Column('id_exp', sa.String(), nullable=True),
    sa.Column('sb_check', sa.Boolean(), nullable=True),
    sa.Column('sb_approval', sa.Boolean(), nullable=True),
    sa.Column('sb_disapp_reason', sa.String(), nullable=True),
    sa.Column('sb_notes', sa.String(), nullable=True),
    sa.Column('ap_check', sa.Boolean(), nullable=True),
    sa.Column('ap_approval', sa.Boolean(), nullable=True),
    sa.Column('ap_disapp_reason', sa.String(), nullable=True),
    sa.Column('ap_notes', sa.String(), nullable=True),
    sa.Column('entered', sa.PickleType(), nullable=True),
    sa.Column('citizenship_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['citizenship_id'], ['citizenships.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blackList',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('visitor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['visitor_id'], ['visitors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('blackList')
    op.drop_table('visitors')
    op.drop_table('requests')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_divisions_name'), table_name='divisions')
    op.drop_index(op.f('ix_divisions_id'), table_name='divisions')
    op.drop_table('divisions')
    op.drop_index(op.f('ix_citizenships_name'), table_name='citizenships')
    op.drop_index(op.f('ix_citizenships_id'), table_name='citizenships')
    op.drop_table('citizenships')
    # ### end Alembic commands ###

# –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª init_roles.py –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:

# !/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import os
from dotenv import load_dotenv

load_dotenv()

from sql_app.database import SessionLocal, engine
from sql_app.models import Base, Role
from sql_app import constants


def init_roles():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

    # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    Base.metadata.create_all(bind=engine)

    db = SessionLocal()

    roles_data = [
        {
            "code": constants.ADMIN_ROLE_CODE,
            "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            "description": "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ",
        },
        {
            "code": constants.NACH_DEPARTAMENTA_ROLE_CODE,
            "name": "–ù–∞—á–∞–ª—å–Ω–∏–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞",
            "description": "–ú–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –∑–∞—è–≤–∫–∏, –≤–∏–¥–∏—Ç –∂—É—Ä–Ω–∞–ª—ã —Å–≤–æ–µ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞",
        },
        {
            "code": constants.NACH_UPRAVLENIYA_ROLE_CODE,
            "name": "–ù–∞—á–∞–ª—å–Ω–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
            "description": "–ú–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –∑–∞—è–≤–∫–∏, –≤–∏–¥–∏—Ç –∂—É—Ä–Ω–∞–ª—ã —Å–≤–æ–µ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
        },
        {
            "code": constants.USB_ROLE_CODE,
            "name": "–£–°–ë",
            "description": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–¥–æ–±—Ä—è–µ—Ç –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –∑–∞—è–≤–∫–∏ –∏ –∑–∞—è–≤–∫–∏ —Å –±–æ–ª–µ–µ —á–µ–º 3 –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º–∏ –∏–ª–∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü–∞–º–∏",
        },
        {
            "code": constants.AS_ROLE_CODE,
            "name": "–ê–°",
            "description": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–¥–æ–±—Ä—è–µ—Ç –∑–∞—è–≤–∫–∏ –ø–æ—Å–ª–µ –£–°–ë –∏ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –∑–∞—è–≤–∫–∏ —Å –º–µ–Ω–µ–µ —á–µ–º 4 –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º–∏",
        },
        {
            "code": "KPP-1",
            "name": "–û–ø–µ—Ä–∞—Ç–æ—Ä –ö–ü–ü-1",
            "description": "–§–∏–∫—Å–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ –∏ –≤—ã—Ö–æ–¥ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –Ω–∞ –ö–ü–ü-1",
        },
        {
            "code": "KPP-2",
            "name": "–û–ø–µ—Ä–∞—Ç–æ—Ä –ö–ü–ü-2",
            "description": "–§–∏–∫—Å–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ –∏ –≤—ã—Ö–æ–¥ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –Ω–∞ –ö–ü–ü-2",
        },
        {
            "code": "KPP-3",
            "name": "–û–ø–µ—Ä–∞—Ç–æ—Ä –ö–ü–ü-3",
            "description": "–§–∏–∫—Å–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ –∏ –≤—ã—Ö–æ–¥ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –Ω–∞ –ö–ü–ü-3",
        },
        {
            "code": "KPP-4",
            "name": "–û–ø–µ—Ä–∞—Ç–æ—Ä –ö–ü–ü-4",
            "description": "–§–∏–∫—Å–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ –∏ –≤—ã—Ö–æ–¥ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –Ω–∞ –ö–ü–ü-4",
        },
        {
            "code": constants.EMPLOYEE_ROLE_CODE,
            "name": "–°–æ—Ç—Ä—É–¥–Ω–∏–∫",
            "description": "–û–±—ã—á–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤",
        },
    ]

    try:
        for role_data in roles_data:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–æ–ª—å
            existing_role = (
                db.query(Role).filter(Role.code == role_data["code"]).first()
            )

            if not existing_role:
                # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Ä–æ–ª—å
                new_role = Role(**role_data)
                db.add(new_role)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å: {role_data['name']} ({role_data['code']})")
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ä–æ–ª—å
                existing_role.name = role_data["name"]
                existing_role.description = role_data["description"]
                print(f"üìù –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–æ–ª—å: {role_data['name']} ({role_data['code']})")

        db.commit()
        print("\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ–ª–µ–π: {e}")
        db.rollback()
    finally:
        db.close()


if __name__ == "__main__":
    init_roles()
